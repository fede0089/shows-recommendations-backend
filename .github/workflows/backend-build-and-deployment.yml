name: backend build and deployment

env:
  PIPELINE_ID: ${{ github.run_id }}-${{ github.run_number }}
  AWS_REGION: us-east-1
  
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Check out code
      uses: actions/checkout@v3
    - name: Build the Docker image 
      run: docker build . --file Dockerfile --tag ${{ steps.login-ecr.outputs.registry }}/shows-recomendations-backend:${{ env.PIPELINE_ID }} --tag ${{ steps.login-ecr.outputs.registry }}/shows-recomendations-backend:latest
    - name: Push the Docker image to Amazon ECR
      run: docker push --all-tags ${{ steps.login-ecr.outputs.registry }}/shows-recomendations-backend

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    environment: prod
#    steps:
#    - name: Check out code
#      uses: actions/checkout@v3
#    - name: Generate deployment package
#      run: zip -r deploy.zip . -x '*.git*'
#    - name: Deploy to AWS Elastic BeansTalk 
#      uses: einaregilsson/beanstalk-deploy@v20
#      with:
#        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        application_name: shows-recommendations-backend
#        environment_name: shows-recommendations-backend-prod
#        version_label: ${{ env.PIPELINE_ID }}
#        region: ${{ env.AWS_REGION }}
#        use_existing_version_if_available: true
#        deployment_package: deploy.zip
